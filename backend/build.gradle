plugins {
	id 'java'
	id 'org.springframework.boot' version '2.6.9'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
	id "org.sonarqube" version "3.4.0.2513"
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.woowacourse'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'com.querydsl:querydsl-jpa:5.0.0'
	implementation 'com.querydsl:querydsl-apt:5.0.0'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java:8.0.17'

	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.rest-assured:rest-assured:4.4.0'
}

/* QueryDsl Start */
def querydslSrcDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslSrcDir
}

sourceSets {
	main.java.srcDir querydslSrcDir
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
/* QueryDsl End */

/* RestDocs Start */
tasks.named('test') {
	useJUnitPlatform()

	outputs.dir snippetsDir
}

ext {
	snippetsDir = file('build/generated-snippets')
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
	baseDirFollowsSourceFile()
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs/*')
}

bootJar {
	dependsOn asciidoctor

	copy {
		from "${asciidoctor.outputDir}"
		into file("src/main/resources/static/docs")
	}

	copy {
		from file("src/main/resources/static")
		into file("build/resources/main/static")
	}
}
/* RestDocs End */

/* Sonarqube Start */
sonarqube {
	properties {
		property "sonar.projectKey", "woowacourse-teams_2022-momo_AYPVMgjN6WwXr_psaOXr"
	}
}
/* Sonarqube End */
